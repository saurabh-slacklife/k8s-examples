apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: py-proto-health
  name: py-proto-health
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "py-proto-health"
      backend-service: "yes"
      ingress-user-allowed: "no" 
      ingress-health-allowed: "yes" 
      egress-redis-allowed: "yes"
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: "py-proto-health"
        backend-service: "yes"
        ingress-user-allowed: "no" 
        ingress-health-allowed: "yes" 
        egress-redis-allowed: "yes"
    spec:
      containers:
      - image: saurabhsa/py-protobuf-example:latest
        name: py-protobuf-health
        imagePullPolicy: IfNotPresent
        ports:
        - name: py-health-port
          containerPort: 5000
        env:
          - name: REDIS_HOST
            valueFrom:
             configMapKeyRef:
              name: redis-config
              key: REDIS_HOST
          - name: REDIS_PORT
            valueFrom:
             configMapKeyRef:
              name: redis-config
              key: REDIS_PORT
          - name: REDIS_P
            valueFrom:
             configMapKeyRef:
              name: redis-config
              key: REDIS_P
        resources: {}
status: {}
